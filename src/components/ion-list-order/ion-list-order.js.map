{"version":3,"sources":["ion-list-order.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,YAAA,EAAc,KAAA,EAAO,MAAA,EAAO,MAAO,eAAA,CAAgB;AAEvE;;;;;GAKG;AAEH,MAAM;IAWJ;QARC,gBAAW,GAAsB,IAAI,YAAY,EAAO,CAAC;QAC1D,SAAI,GAAQ,EAAE,CAAC;QAEf,SAAI,GAAQ;YACV,IAAI,EAAE;gBACJ,GAAG,EAAE,EAAE;aACR;SACF,CAAC;QAEA,0DAA0D;IAC5D,CAAC;IACD,WAAW,CAAC,IAAI;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,sCAAsC;QACtC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;;AACI,gCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,gBAAgB;gBAC1B,QAAQ,EAAE;;;;;;;;;;;;;;;KAeP;gBACH,MAAM,EAAE,CAAC;;;IAGP;iBACD;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,oCAAc,GAAmE,MAAM,EAC7F,CAAC;AACK,oCAAc,GAA2C;IAChE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC3B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC5B,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;CACjC,CAAC","file":"ion-list-order.js","sourceRoot":"","sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Generated class for the IonListCategoryComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components.\n */\n\nexport class IonListOrderComponent {\n   items: any;\n   status: string;\n   itemClicked: EventEmitter<any> = new EventEmitter<any>();\n  data: any = {};\n\n  user: any = {\n    shop: {\n      _id: ''\n    }\n  };\n  constructor() {\n    // console.log('Hello IonListProductComponent Component');\n  }\n  selectOrder(item) {\n    this.data = item;\n    // this.navCtrl.push(OrderDetailPage);\n    this.itemClicked.emit(this.data);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ion-list-order',\n  template: `\n      <ion-list *ngIf=\"items\">\n      <p>Ord : {{item._id}}</p>\n        <ion-item *ngFor=\"let item of items; let i = index\" (click)=\"selectOrder(item)\">\n            <ion-thumbnail item-start>\n            <img src=\"{{item.image}}\">\n        </ion-thumbnail>\n        <div *ngIf=\"item.status === status\">\n        <p id=\"pName\">{{item.name}}</p>\n        <p id=\"pQty\">{{item.qty}} qty</p>\n        <p id=\"pPrice\">{{item.price | number}} Baht</p>\n        <p text-right id=\"pStatus\" >{{item.status}}</p>\n        </div>\n        </ion-item>\n      </ion-list>\n    `,\n  styles: [`\n  ion-list-order {\n    background-color: red;\n  }`\n  ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'items': [{ type: Input },],\n'status': [{ type: Input },],\n'itemClicked': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}