{"version":3,"sources":["ion-list-order.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAM,MAAO,eAAA,CAAgB;AAEjD;;;;;GAKG;AAEH,MAAM;IAGJ;QACE,0DAA0D;IAC5D,CAAC;;AAEI,gCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,gBAAgB;gBAC1B,QAAQ,EAAE;;;;;;;;;;;;;;;;;;KAkBP;gBACH,MAAM,EAAE,CAAC;;;IAGP;iBACD;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,oCAAc,GAAmE,MAAM,EAC7F,CAAC;AACK,oCAAc,GAA2C;IAChE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC7B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CAC1B,CAAC","file":"ion-list-order.js","sourceRoot":"","sourcesContent":["import { Component, Input } from '@angular/core';\n\n/**\n * Generated class for the IonListCategoryComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components.\n */\n\nexport class IonListOrderComponent {\n     channel: any;\n     steps:Array<any>;\n  constructor() {\n    // console.log('Hello IonListProductComponent Component');\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ion-list-order',\n  template: `\n  <ion-navbar>\n  <ion-grid text-right>\n    <ion-row>\n      <ion-col *ngFor=\"let step of steps\">\n        <ion-row>\n          <ion-col text-center>\n            <ion-segment color=\"light\" class=\"md\" [(ngModel)]=\"channel\">\n              <ion-segment-button [ngClass]=\"channel >= step.value ? 'active' : '' \" [value]=\"step.value\">{{step.value}}</ion-segment-button>\n            </ion-segment>\n            <p>{{step.title}}</p>\n          </ion-col>\n        </ion-row>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-navbar>\n<ng-content></ng-content>\n    `,\n  styles: [`\n  ion-list-order {\n    background-color: red;\n  }`\n  ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'channel': [{ type: Input },],\n'steps': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}