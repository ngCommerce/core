{"version":3,"sources":["ion-form-profile.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,MAAA,EAAQ,YAAA,EAAc,KAAA,EAAM,MAAO,eAAA,CAAgB;AAEvE;;;;;GAKG;AAEH,MAAM;IAWF;QALC,gBAAW,GAAsB,IAAI,YAAY,EAAO,CAAC;QACzD,0BAAqB,GAAsB,IAAI,YAAY,EAAO,CAAC;QACnE,sBAAiB,GAAsB,IAAI,YAAY,EAAO,CAAC;QAC/D,wBAAmB,GAAsB,IAAI,YAAY,EAAO,CAAC;QACjE,iBAAY,GAAsB,IAAI,YAAY,EAAO,CAAC;QAEvD,2DAA2D;IAC/D,CAAC;IAED,MAAM;QACF,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACxC,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACxC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC;IAED,cAAc;QACV,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACpD,CAAC;IAED,UAAU;QACN,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC9C,CAAC;IAED,KAAK;QACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC;IACD,cAAc;QACV,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACtD,CAAC;;AACE,kCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACtB,QAAQ,EAAE,kBAAkB;gBAC5B,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAyDT;gBACD,MAAM,EAAE,CAAC;;;IAGT;iBACC;aACJ,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,sCAAc,GAAmE,MAAM,EAC7F,CAAC;AACK,sCAAc,GAA2C;IAChE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC5B,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAClC,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACpC,kBAAkB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACtC,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC1B,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IAClC,uBAAuB,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IAC5C,mBAAmB,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IACxC,qBAAqB,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;IAC1C,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;CAClC,CAAC","file":"ion-form-profile.js","sourceRoot":"","sourcesContent":["import { Component, Output, EventEmitter, Input } from '@angular/core';\n\n/**\n * Generated class for the IonListCategoryComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components.\n */\n\nexport class IonFormProfileComponent {\n     isShop: Boolean;\n     waitFanction: Boolean;\n     isNotification: Boolean;\n     isSettingProfile: Boolean;\n     item: any;\n     itemClicked: EventEmitter<any> = new EventEmitter<any>();\n     settingProfileClicked: EventEmitter<any> = new EventEmitter<any>();\n     manageShopClicked: EventEmitter<any> = new EventEmitter<any>();\n     notificationClicked: EventEmitter<any> = new EventEmitter<any>();\n     loginClicked: EventEmitter<any> = new EventEmitter<any>();\n    constructor() {\n        // console.log('Hello IonListCategoryComponent Component');\n    }\n\n    logout() {\n        window.localStorage.removeItem('token');\n        window.localStorage.removeItem('gCart');\n        this.itemClicked.emit('logout');\n    }\n\n    onNotification() {\n        this.notificationClicked.emit('onNotification');\n    }\n\n    manageShop() {\n        this.manageShopClicked.emit('manageShop');\n    }\n\n    login() {\n        this.loginClicked.emit('login');\n    }\n    settingProfile() {\n        this.settingProfileClicked.emit('settingProfile');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ion-form-profile',\n    template: ` \n  <ion-list>\n  <button ion-item  *ngIf=\"!item\" (click)=\"login()\">\n          <ion-icon name=\"ios-happy-outline\" item-start></ion-icon>\n          Sign in\n      </button>\n  <button ion-item *ngIf=\"item\">\n          <ion-icon name=\"ios-happy-outline\" item-start></ion-icon>\n         {{item.displayName}} \n      </button>\n</ion-list>\n<ion-list>\n  <button ion-item (click)=\"onNotification()\" *ngIf=\"isNotification\">\n          <ion-icon name=\"ios-notifications-outline\" item-start></ion-icon>\n          Notification\n      </button>\n  <button ion-item *ngIf=\"waitFanction\">\n          <ion-icon name=\"ios-filing-outline\" item-start></ion-icon>\n          History log\n      </button>\n  <button ion-item *ngIf=\"item && waitFanction\"  >\n          <ion-icon name=\"ios-pin-outline\" item-start></ion-icon>\n          Location\n      </button>\n</ion-list>\n<ion-list >\n    <button ion-item (click)=\"settingProfile()\" *ngIf=\"isSettingProfile\">\n        <ion-icon name=\"ios-contact-outline\" item-start></ion-icon>\n            Setting Profile\n    </button>\n    <button ion-item (click)=\"manageShop()\" *ngIf=\"isShop\">\n          <ion-icon name=\"ios-settings-outline\" item-start></ion-icon>\n          Manage Shop\n    </button>\n</ion-list>\n<ion-list *ngIf=\"waitFanction\">\n  <button ion-item>\n          <ion-icon name=\"ios-create-outline\" item-start></ion-icon>\n          Change language\n      </button>\n</ion-list>\n<ion-list *ngIf=\"waitFanction\">\n  <button ion-item>\n          <ion-icon name=\"ios-document-outline\" item-start></ion-icon>\n          Policy\n      </button>\n  <button ion-item>\n          <ion-icon name=\"ios-help-circle-outline\" item-start></ion-icon>\n          Help\n      </button>\n</ion-list>\n<ion-list *ngIf=\"item\">\n  <button ion-item (click)=\"logout()\">\n          <ion-icon name=\"ios-log-out-outline\" item-start></ion-icon>\n          logout\n      </button>\n</ion-list>\n    `,\n    styles: [`\n  ion-form-profile {\n    background-color: red;\n  }`\n    ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'isShop': [{ type: Input },],\n'waitFanction': [{ type: Input },],\n'isNotification': [{ type: Input },],\n'isSettingProfile': [{ type: Input },],\n'item': [{ type: Input },],\n'itemClicked': [{ type: Output },],\n'settingProfileClicked': [{ type: Output },],\n'manageShopClicked': [{ type: Output },],\n'notificationClicked': [{ type: Output },],\n'loginClicked': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}