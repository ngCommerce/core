{"version":3,"sources":["ion-form-payment.ts"],"names":[],"mappings":"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","file":"ion-form-payment.js","sourceRoot":"","sourcesContent":["import { Component, Output, EventEmitter, Input } from '@angular/core';\n\n/**\n * Generated class for the IonListCategoryComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components.\n */\n\nexport class IonFormPaymentComponent {\n  data: any = {};\n   paymentgateway: any;\n   datashipping: any;\n  datapayment: any = {};\n   gotoNext: EventEmitter<any> = new EventEmitter<any>();\n   datapaymentData: EventEmitter<any> = new EventEmitter<any>();\n\n  channel: string = 'credit';\n\n  constructor() {\n    // console.log('Hello IonFormPaymentComponent Component');\n  }\n  paymentType(e) {\n    this.datapayment = e;\n  }\n  formcredit(e) {\n    if (e.creditno) {\n      this.datashipping.order.payment.creditno = e.creditno\n    }\n    if (e.creditname) {\n      this.datashipping.order.payment.creditname = e.creditname\n    }\n    if (e.expdate) {\n      this.datashipping.order.payment.expdate = e.expdate\n    }\n    if (e.creditcvc) {\n      this.datashipping.order.payment.creditcvc = e.creditcvc\n    }\n  }\n  stepValidation() {\n    this.datapayment = this.datashipping;\n    let chk = false;\n    if (this.datapayment.order && this.datapayment.order.payment && this.datapayment.order.payment.paymenttype) {\n      if (this.datapayment.order.payment.paymenttype === 'credit') {\n        if (this.datapayment.order.payment.creditno && this.datapayment.order.payment.creditname && this.datapayment.order.payment.expdate && this.datapayment.order.payment.creditcvc) {\n          chk = true;\n        }\n      } else if (this.datapayment.order.payment.paymenttype === 'delivery') {\n        chk = true;\n      } else if (this.datapayment.order.payment.paymenttype === 'bank') {\n        if (this.datapayment.order.payment.counterservice) {\n          chk = true;\n        }\n      }\n    } else {\n      this.datapayment.order.payment.paymenttype = this.channel;\n    }\n\n    if (chk) {\n      this.gotoNext.emit(this.datapayment);\n    } else {\n      alert('Please enter your payment');\n    }\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ion-form-payment',\n  template: `\n  <ion-form-paymentoption [paymentgateway]=\"paymentgateway.payment\" [datashipping]=\"datashipping\" (datapayment)=\"paymentType($event)\"\n  [(channel)]=\"channel\">\n  <ion-form-credit [value]=\"'credit'\" (datacredit)=\"formcredit($event)\"></ion-form-credit>\n  <ion-form-delivery [value]=\"'delivery'\"></ion-form-delivery>\n  <ion-form-counterservice [value]=\"'bank'\" [paymentgateway]=\"paymentgateway.counterservice\" [datapayment]=\"datapayment\"></ion-form-counterservice>\n  <ion-grid>\n    <ion-row>\n      <ion-col>\n        <button ion-button full color=\"danger\" class=\"slide-next\" (click)=\"stepValidation()\">รีวิวการสั่งสินค้า</button>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-form-paymentoption>\n    `,\n  styles: [`\n  ion-form-payment {\n    \n  }`\n  ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'paymentgateway': [{ type: Input },],\n'datashipping': [{ type: Input },],\n'gotoNext': [{ type: Output },],\n'datapaymentData': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}