{"version":3,"sources":["ion-upload-image.ts"],"names":[],"mappings":"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","file":"ion-upload-image.js","sourceRoot":"","sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ImagePicker } from \"@ionic-native/image-picker\";\nimport { Base64 } from \"@ionic-native/base64\";\nimport { UploadImageService } from './../../services/uploadimage/uploadimage.service';\nimport { LoadingController } from 'ionic-angular';\n\n/**\n * Generated class for the IonListCategoryComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components.\n */\n\n// <ion-row>\n// <ion-col class=\"right ion-icon-cust\">\n//   <ion-icon name=\"md-image\" (click)=\"selectImage()\" *ngIf=\"imageList.length < maxImage\"></ion-icon>\n//   <ion-icon name=\"md-cloud-upload\" (click)=\"uploadImage()\" *ngIf=\"allowUpload > 0\"></ion-icon>\n// </ion-col>\n// </ion-row>\nexport class IonUploadImageComponent {\n    public imageList: Array<any> = [];\n    public allowUpload: number = 0;\n     maxImage: number;\n     imageOutList: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(public uploadXServiceProvider: UploadImageService, public imagePicker: ImagePicker, public base64: Base64, public loadingCtrl:LoadingController) {\n\n    }\n    uploadImage() {\n        let loading = this.loadingCtrl.create();\n        loading.present();\n        let items = [];\n        this.uploadXServiceProvider.uploadImages(this.imageList).then(data => {\n            data.forEach(function (img) {\n                items.push(img.imgURL);\n            });\n            this.imageOutList.emit(items);\n            this.allowUpload = 0;\n            alert('อัพโหลดสำเร็จ');\n            loading.dismiss();\n        }).catch(err => {\n            alert(err);\n        });\n    }\n\n    selectImage() {\n        if (this.imageList.length < this.maxImage) {\n            let options = {\n                maximumImagesCount: this.maxImage,\n                width: 1080,\n                height: 1080,\n                quality: 80\n            };\n\n            if (this.imagePicker.hasReadPermission()) {\n                this.imagePicker.getPictures(options).then((results) => {\n                    if (results.length > 0 && (this.imageList.length + results.length) <= this.maxImage) {\n                        this.convertImgUrlToBase64(results);\n                    } else {\n                        alert(`คุณเลือกรูปเกินกำหนด`);\n                    }\n                }, (err) => {\n                    alert('Message ERROR Get Pictures' + err);\n                });\n            } else {\n                this.imagePicker.requestReadPermission().then(() => {\n                    this.imagePicker.getPictures(options).then((results) => {\n                        if (results.length > 0 && (this.imageList.length + results.length) <= this.maxImage) {\n                            this.convertImgUrlToBase64(results);\n                        } else {\n                            alert(`คุณเลือกรูปเกินกำหนด`);\n                        }\n                    }, (err) => {\n                        alert('Message ERROR Get Pictures' + err);\n                    });\n\n                }, (err) => {\n                    alert('Message ERROR Request Read Permission' + err);\n                });\n            }\n        } else {\n            alert(`คุณเลือกรูปครบ ${this.maxImage} รูปแล้ว`);\n        }\n    }\n\n    convertImgUrlToBase64(imgUrl: any) {\n        for (let i = 0; i < imgUrl.length; i++) {\n            this.base64.encodeFile(imgUrl[i]).then((base64File: string) => {\n                let base64img = base64File.replace(/\\n/g, '');\n                base64img = base64File.replace('data:image/*;charset=utf-8;base64,', 'data:image/jpg;base64,');\n                let id = new Date();\n                this.imageList.push({\n                    id: id,\n                    imgUrl: imgUrl[i],\n                    base64: base64img\n                });\n                this.allowUpload = this.imageList.length;\n            }, (err) => { });\n        }\n    }\n\n    deleteImage(imgID) {\n        for (let i = 0; i < this.imageList.length; i++) {\n            if (this.imageList[i].id == imgID) {\n                this.imageList.splice(i, 1);\n                break;\n            }\n        }\n        this.allowUpload = this.imageList.length;\n    }\n\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ion-upload-image',\n    template: `\n    <ion-row class=\"categories-row\">\n      <ion-col width-30 class=\"horizontal-item\" *ngFor=\"let data of imageList\">\n        <img src=\"{{data.imgUrl}}\">\n        <span class=\"trash\" (click)=\"deleteImage(data.id)\"><ion-icon name=\"trash\"></ion-icon></span>\n      </ion-col>\n    </ion-row>\n  <ion-row>\n    <ion-col class=\"right ion-icon-cust\">\n      <ion-icon name=\"md-image\" (click)=\"selectImage()\"></ion-icon>\n      <ion-icon name=\"md-cloud-upload\" (click)=\"uploadImage()\"></ion-icon>\n    </ion-col>\n  </ion-row>\n    `,\n    styles: [`\n  ion-upload-image {\n    \n  }`\n    ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: UploadImageService, },\n{type: ImagePicker, },\n{type: Base64, },\n{type: LoadingController, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'maxImage': [{ type: Input },],\n'imageOutList': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}