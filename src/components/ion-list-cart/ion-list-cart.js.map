{"version":3,"sources":["ion-list-cart.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAO,MAAA,EAAQ,YAAA,EAAa,MAAO,eAAA,CAAgB;AAEvE;;;;;GAKG;AAEH,MAAM;IAKJ;QAFC,gBAAW,GAAsB,IAAI,YAAY,EAAE,CAAC;IAIrD,CAAC;IAED,UAAU,CAAC,KAAK;QACd,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAED,QAAQ,CAAC,IAAI;QACX,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,GAAG,EAAE,CAAC;YACX,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,CAAC;IACH,CAAC;IAED,QAAQ,CAAC,IAAI;QACX,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;;AAEI,+BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,eAAe;gBACzB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BT;gBACD,MAAM,EAAE,CAAC;;GAER,CAAC;aACH,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,mCAAc,GAAmE,MAAM,EAC7F,CAAC;AACK,mCAAc,GAA2C;IAChE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC3B,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;CACjC,CAAC","file":"ion-list-cart.js","sourceRoot":"","sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n/**\n * Generated class for the SearchBarIconComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components.\n */\n\nexport class IonListCartComponent {\n\n   items: Array<any>;\n   returnItems: EventEmitter<any> = new EventEmitter();\n\n  constructor() {\n\n  }\n\n  removeItem(index) {\n    this.items.splice(index, 1);\n    this.returnItems.emit(this.items);\n  }\n\n  decrease(item) {\n    if (item.qty > 1) {\n      item.qty--;\n      this.returnItems.emit(this.items);\n    }\n  }\n\n  increase(item) {\n    item.qty++;\n    this.returnItems.emit(this.items);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ion-list-cart',\n  template: `\n    <ion-list>\n    <ion-item *ngFor=\"let item of items; let i = index\">\n      <ion-thumbnail item-start>\n        <img [src]=\"item.product.images[0]\">\n      </ion-thumbnail>\n      <h2>{{ item.product.name }}</h2>\n      <p>{{ item.product.price }} {{ item.product.currency }}</p>\n      <ion-grid>\n        <ion-row>\n          <ion-col col-6 id=\"cartTrash\">\n            <ion-icon name=\"trash\" (click)=\"removeItem(i)\"></ion-icon>\n          </ion-col>\n          <ion-col col-6>\n            <button ion-button icon-only small id=\"cartDecrease\" (click)=\"decrease(item)\">\n              <ion-icon name=\"remove\"></ion-icon>\n            </button>\n            <label class=\"count\">{{ item.qty }}</label>\n            <button ion-button icon-only small  id=\"cartIncrease\"  (click)=\"increase(item)\">\n              <ion-icon name=\"add\"></ion-icon>\n            </button>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </ion-item>\n  </ion-list>\n  `,\n  styles: [`\n  \n  `]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'items': [{ type: Input },],\n'returnItems': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}