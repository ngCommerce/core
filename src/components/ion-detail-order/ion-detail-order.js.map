{"version":3,"sources":["ion-detail-order.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAO,MAAA,EAAQ,YAAA,EAAa,MAAO,eAAA,CAAgB;AAEvE;;;;;GAKG;AAEH,MAAM;IAGF;QADC,qBAAgB,GAAsB,IAAI,YAAY,EAAO,CAAC;QAE3D,2DAA2D;IAC/D,CAAC;;AAEE,kCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACtB,QAAQ,EAAE,kBAAkB;gBAC5B,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAyCT;gBACD,MAAM,EAAE,CAAC;;;IAGT;iBACC;aACJ,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,sCAAc,GAAmE,MAAM,EAC7F,CAAC;AACK,sCAAc,GAA2C;IAChE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC1B,kBAAkB,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;CACtC,CAAC","file":"ion-detail-order.js","sourceRoot":"","sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n/**\n * Generated class for the IonListCategoryComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components.\n */\n\nexport class IonDetailOrderComponent {\n     item: any;\n     selectedFavorite: EventEmitter<any> = new EventEmitter<any>();\n    constructor() {\n        // console.log('Hello IonListCategoryComponent Component');\n    }\n    \nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ion-detail-order',\n    template: `\n  <ion-slides pager=\"true\" *ngIf=\"item.images && item.images.length > 0\">\n  <ion-slide *ngFor=\"let image of item.images\">\n    <img src=\"{{image}}\">\n  </ion-slide>\n</ion-slides>\n<ion-grid id=\"gridDetail\">\n    <ion-row>\n        <ion-col id=\"colProduct\">\n            <p>{{item.name}}</p>\n            <p>{{item.detail}}</p>\n            <p *ngIf=\"item.promotionprice\">\n                <span>{{item.promotionprice | number}} {{item.currency}}</span>\n                <span>{{item.price | number}} {{item.currency}}</span>\n                <span>-{{item.percentofdiscount}} %</span>\n            </p>\n            <h4 *ngIf=\"!item.promotionprice\">{{item.price}} {{item.currency}}</h4>\n\n        </ion-col>\n    </ion-row>\n    <ion-row *ngIf=\"item.rate\">\n        <ion-col width-50 id=\"colRate\">\n            <rating [(ngModel)]=\"item.rate\" readOnly=\"false\" max=\"5\" emptyStarIconName=\"star-outline\" halfStarIconName=\"star-half\"\n                starIconName=\"star\" nullable=\"false\"></rating>\n        </ion-col>\n      \n    </ion-row>\n</ion-grid>\n<ion-row  *ngIf=\"item.shippings && item.shippings.length > 0\">\n    <ion-col text-left id=\"colShipping\">\n        วิธีการจัดส่ง\n    </ion-col>\n</ion-row>\n<ion-list *ngIf=\"item.shippings && item.shippings.length > 0\">\n    <ion-item-divider *ngFor=\"let shipping of item.shippings\">\n        <ion-icon item-start name=\"ios-archive-outline\"></ion-icon> {{shipping.name}}\n    </ion-item-divider>\n    <ion-item-divider *ngIf=\"item.cod\">\n        <ion-icon item-start name=\"ios-cash-outline\"></ion-icon> สามารถชำระเงินปลายทางได้\n    </ion-item-divider>\n</ion-list>\n    `,\n    styles: [`\n  ion-detail-order {\n    background-color: red;\n  }`\n    ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'item': [{ type: Input },],\n'selectedFavorite': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}