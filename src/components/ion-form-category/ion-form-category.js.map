{"version":3,"sources":["ion-form-category.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAkB,MAAA,EAAQ,YAAA,EAAa,MAAO,eAAA,CAAgB;AAEvE;;;;;GAKG;AAEH,MAAM;IAKJ,uBAAuB;IACvB;QALC,eAAU,GAAsB,IAAI,YAAY,EAAO,CAAC;QACzD,UAAK,GAAG;YACN,IAAI,EAAE,EAAE;SACT,CAAA;QAGC,2DAA2D;IAC7D,CAAC;IACD,OAAO,CAAC,KAAK;QACX,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAE9B,CAAC;;AAEI,mCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,mBAAmB;gBAC7B,QAAQ,EAAE;;;;;;;;;;;;;;KAcP;gBACH,MAAM,EAAE,CAAC;;;IAGP;iBACD;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,uCAAc,GAAmE,MAAM,EAC7F,CAAC;AACK,uCAAc,GAA2C;IAChE,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;CAChC,CAAC","file":"ion-form-category.js","sourceRoot":"","sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n/**\n * Generated class for the IonListCategoryComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components.\n */\n\nexport class IonFormCategoryComponent {\n   createcate: EventEmitter<any> = new EventEmitter<any>();\n  items = {\n    name: ''\n  }\n  // @Input() items: any;\n  constructor() {\n    // console.log('Hello IonListCategoryComponent Component');\n  }\n  addcate(items) {\n    this.createcate.emit(items);\n\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ion-form-category',\n  template: `\n  <ion-list>\n  \n    <ion-item>\n      <ion-label floating>Name Shop</ion-label>\n      <ion-input type=\"text\" [(ngModel)]=\"items.name\"></ion-input>\n      \n    </ion-item>\n  \n  </ion-list>\n\n<div padding>\n<button ion-button block (click)=\"addcate(items)\">Add</button>\n</div>\n    `,\n  styles: [`\n  ion-form-category {\n    background-color: red;\n  }`\n  ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'createcate': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}