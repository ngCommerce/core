{"version":3,"sources":["ion-form-shipping.ts"],"names":[],"mappings":"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","file":"ion-form-shipping.js","sourceRoot":"","sourcesContent":["import { Component, Output, EventEmitter, Input } from '@angular/core';\n\n/**\n * Generated class for the IonListCategoryComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components.\n */\n\nexport class IonFormShippingComponent {\n     listaddress: Array<any>;\n     listshipping: any;\n     gotoNext: EventEmitter<any> = new EventEmitter<any>();\n     createAddress: EventEmitter<any> = new EventEmitter<any>();\n\n    address = {};\n    data: any = {\n        order: {\n            shipping: {},\n            items: [],\n            payment: {},\n            amount: 0,\n            discount: 0,\n            totalamount: 0,\n            deliveryprice: 0\n        }\n    };\n    constructor() {\n        // console.log('Hello IonFormShippingComponent Component');\n    }\n\n    selectaddress(data) {\n        this.data.order.shipping = data;\n    }\n    openModal() {\n        this.createAddress.emit('push model');\n    }\n    \n    setproduct(product, shipping) {\n        var checkProduct = false;\n        if (this.data.order.items && this.data.order.items.length > 0) {\n          // console.log('+++++++++++++++++++++++++++++++++');\n          this.data.order.items.forEach(itm => {\n            if (itm.product.name === product.product.name) {\n              itm.delivery = shipping;\n              checkProduct = true;\n            }\n          });\n        }\n        if (!checkProduct) {\n          this.data.order.items.push({\n            product: product.product,\n            qty: product.qty,\n            amount: (product.product.price || 0) * (product.qty),\n            delivery: shipping,\n            price: product.product.price,\n            discount: product.discount,\n            afterdiscount: (product.amount || 0) - (product.discount || 0)\n    \n          });\n        }\n        console.log(this.data.order);\n      }\n    stepValidation() {\n        if (this.data.order.shipping && this.data.order.shipping.address) {\n            if (this.data.order.items.length === this.listshipping.items.length) {\n                this.data.order.items.forEach(itm => {\n                    console.log(itm);\n                    this.data.order.deliveryprice += itm.delivery.price || 0;\n                    this.data.order.discount += itm.discount || 0;\n                    this.data.order.amount += itm.amount || 0;\n                    this.data.order.totalamount += itm.afterdiscount || 0;\n                });\n                this.gotoNext.emit(this.data);\n            } else {\n                alert('Please select products');\n            }\n        } else {\n            alert('Please select shipping');\n        }\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ion-form-shipping',\n    template: `\n    <ion-content>\n    <ion-label> {{'การจัดส่งสินค้า'}} </ion-label>\n    <ion-list radio-group>\n        <ion-item *ngFor=\"let item of listaddress.address\" (click)=\"selectaddress(item)\">\n            <ion-label>\n                <ion-row>\n                    <ion-col width-33>\n                        <p>{{item.firstname}} {{item.lastname}}</p>\n                    </ion-col>\n                </ion-row>\n                <ion-row>\n                    <ion-col width-100>\n                        <p>{{item.address}} {{item.district}} {{item.subdistrict}} {{item.province}} {{item.postcode}}</p>\n                    </ion-col>\n                </ion-row>\n                <ion-row>\n                    <ion-col width-33>\n                        <p style=\"word-wrap: break-word\">{{item.tel}}</p>\n                    </ion-col>\n                </ion-row>\n            </ion-label>\n            <ion-radio (click)=\"selectaddress(item)\"></ion-radio>\n        </ion-item>\n    </ion-list>\n    <ion-label (click)=\"openModal()\">{{'เพิ่มที่อยู่ใหม่'}}</ion-label>\n    <ion-label> {{'โปรดเลือกแบบของการส่งสินค้า'}} </ion-label>\n    <ion-list>\n        <div *ngFor=\"let item of listshipping.items\">\n            <ion-item>\n                <ion-row>\n                    <ion-col width-15>\n                        <p>{{item.product.shop.name}}</p>\n                    </ion-col>\n                </ion-row>\n                <ion-row>\n                    <ion-col no-padding width-33 class=\"magin-right-10-custom\">\n                    <p>preload-image</p>\n                    </ion-col>\n                    <ion-col>\n                        <p>{{item.product.name}}</p>\n                        <p>{{item.qty}} {{'QTY'}}</p>\n                        <p>{{item.product.price | number}} Baht</p>\n                        <p text-right>รวม {{item.product.price * item.qty | number}} {{'บาท'}}</p>\n                    </ion-col>\n                </ion-row>\n            </ion-item>\n            <ion-row>\n                <ion-col width-100>\n                    <p>{{'วิธีจัดส่ง'}}</p>\n                </ion-col>\n            </ion-row>\n            \n            <ion-list radio-group>\n                <ion-item *ngFor=\"let itm of item.product.shippings\" (click)=\"setproduct(item,itm)\">\n                    <ion-label>\n                        <p>{{itm.name}}</p>\n                        <p>{{itm.detail}}</p>\n                    </ion-label>\n                    <ion-radio (click)=\"setproduct(item,itm)\"></ion-radio>\n                </ion-item>\n            </ion-list>\n        </div>\n    </ion-list>\n    <ion-grid>\n        <div *ngIf=\"listshipping.items && listshipping.items.length > 0\">\n            <ion-row>\n                <ion-col width-50>\n                    <p>{{'ราคารวม'}}</p>\n                    <p>{{'ส่วนลด'}}</p>\n                    <p>{{'รวมสุทธิ'}}</p>\n                </ion-col>\n                <ion-col width-50>\n                    <p text-right>{{listshipping.amount | number}} {{'บาท'}}</p>\n                    <p text-right>{{listshipping.discount | number}} {{'บาท'}}</p>\n                    <p text-right>{{listshipping.totalamount | number}} {{'บาท'}}</p>\n                </ion-col>\n            </ion-row>\n        </div>\n    </ion-grid>\n    <ion-grid>\n        <button ion-button full color=\"danger\" (click)=\"stepValidation()\">{{'ดำเนินการชำระเงิน'}}</button>\n    </ion-grid>\n</ion-content>\n    `,\n    styles: [`\n  ion-form-shipping {\n    \n  }`\n    ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'listaddress': [{ type: Input },],\n'listshipping': [{ type: Input },],\n'gotoNext': [{ type: Output },],\n'createAddress': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}