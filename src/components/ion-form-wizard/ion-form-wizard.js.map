{"version":3,"sources":["ion-form-wizard.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAM,MAAO,eAAA,CAAgB;AAEjD;;;;;GAKG;AAEH,MAAM;IAGF,uBAAuB;IACvB,sEAAsE;IACtE;QACI,yDAAyD;IAC7D,CAAC;;AACD,kBAAkB;AAClB,mCAAmC;AACnC,IAAI;AACD,iCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACtB,QAAQ,EAAE,iBAAiB;gBAC3B,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;KAoBT;gBACD,MAAM,EAAE,CAAC;;;IAGT;iBACC;aACJ,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,qCAAc,GAAmE,MAAM,EAC7F,CAAC;AACK,qCAAc,GAA2C;IAChE,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACjC,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CAC1B,CAAC","file":"ion-form-wizard.js","sourceRoot":"","sourcesContent":["import { Component, Input } from '@angular/core';\n\n/**\n * Generated class for the IonListCategoryComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components.\n */\n\nexport class IonFormWizardComponent {\n     currentstep: any;\n     steps:Array<any>;\n    // @Input() items: any;\n    // @Output() itemClicked: EventEmitter<any> = new EventEmitter<any>();\n    constructor() {\n        // console.log('Hello IonFormWizardComponent Component');\n    }\n    // onClick(item) {\n    //     this.itemClicked.emit(item);\n    // }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ion-form-wizard',\n    template: `\n    <ion-navbar>\n    <ion-grid text-right>\n      <ion-row>\n        <ion-col *ngFor=\"let step of steps\">\n          <ion-row>\n            <ion-col text-center>\n              <ion-segment color=\"light\" [(ngModel)]=\"currentstep\">\n              <p>{{step.title}}</p>\n                <ion-segment-button [value]=\"step.value\">{{step.value}}</ion-segment-button>\n                <p>{{step.title}}</p>\n                </ion-segment>\n              <p>{{step.title}}</p>\n            </ion-col>\n          </ion-row>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n  </ion-navbar>\n  <ng-content></ng-content>\n    `,\n    styles: [`\n  ion-form-wizard {\n    \n  }`\n    ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'currentstep': [{ type: Input },],\n'steps': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}