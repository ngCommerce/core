{"version":3,"sources":["ion-background-image.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,YAAA,EAAc,KAAA,EAAO,MAAA,EAAO,MAAO,eAAA,CAAgB;AAEvE;;;;;GAKG;AAEH,MAAM;IAIF;QAFC,gBAAW,GAAsB,IAAI,YAAY,EAAO,CAAC;QAGtD,uDAAuD;IAC3D,CAAC;IACD,aAAa,CAAC,IAAI;QACd,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;;AAEE,sCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACtB,QAAQ,EAAE,sBAAsB;gBAChC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAsCT;gBACD,MAAM,EAAE,CAAC;;;;KAIR,CAAC;aACL,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,0CAAc,GAAmE,MAAM,EAC7F,CAAC;AACK,0CAAc,GAA2C;IAChE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC3B,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;CACjC,CAAC","file":"ion-background-image.js","sourceRoot":"","sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Generated class for the IonListCategoryComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components.\n */\n\nexport class IonBackgroundImageComponent {\n     items: Array<any>;\n     itemClicked: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor() {\n        // console.log('Hello IonFormShopComponent Component');\n    }\n    selectProduct(item) {\n        this.itemClicked.emit(item);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ion-background-image',\n    template: `\n    <ion-row class=\"grid-1 grid-image\">\n    <ion-col width-50 class=\"grid-item\" *ngIf=\"items && items.length > 0\" (click)=\"selectProduct(items[0])\">\n      <div class=\"grid-item-wrapper\">\n        <div class=\"grid-item-inner\">\n          <img class=\"background-image\" src=\"{{items[0].image}}\">\n          <h2 class=\"item-title\">{{items[0].name}}</h2>\n        </div>\n      </div>\n    </ion-col>\n    <ion-col width-50 class=\"grid-item\" *ngIf=\"items && items.length > 1\" (click)=\"selectProduct(items[1])\">\n      <div class=\"grid-item-wrapper\">\n        <div class=\"grid-item-inner\">\n          <img class=\"background-image\" src=\"{{items[1].image}}\">\n          <h2 class=\"item-title\">{{items[1].name}}</h2>\n        </div>\n      </div>\n    </ion-col>\n  </ion-row>\n  <ion-row class=\"grid-1 grid-image\">\n    <ion-col width-50 class=\"grid-item\" *ngIf=\"items && items.length > 2\" (click)=\"selectProduct(items[2])\">\n      <div class=\"grid-item-wrapper\">\n        <div class=\"grid-item-inner\">\n          <img class=\"background-image\" src=\"{{items[2].image}}\">\n          <h2 class=\"item-title\">{{items[2].name}}</h2>\n        </div>\n      </div>\n    </ion-col>\n    <ion-col width-50 class=\"grid-item\" *ngIf=\"items && items.length > 3\" (click)=\"selectProduct(items[3])\">\n      <div class=\"grid-item-wrapper\">\n        <div class=\"grid-item-inner\">\n          <img class=\"background-image\" src=\"{{items[3].image}}\">\n          <h2 class=\"item-title\">{{items[3].name}}</h2>\n        </div>\n      </div>\n    </ion-col>\n  </ion-row>\n  \n    `,\n    styles: [`\n    ion-background-image{\n        \n    }   \n    `]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'items': [{ type: Input },],\n'itemClicked': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}