{"version":3,"sources":["ion-form-confirm.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,MAAA,EAAQ,YAAA,EAAc,KAAA,EAAM,MAAO,eAAA,CAAgB;AAEvE;;;;;GAKG;AAEH,MAAM;IAKF;QAFC,aAAQ,GAAsB,IAAI,YAAY,EAAO,CAAC;QAGnD,0DAA0D;IAC9D,CAAC;IACD,QAAQ,CAAC,IAAI;QACT,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;YACnB,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC/E,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;YAC9C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,CAAC;YAC1E,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC;QAC3C,CAAC;IACL,CAAC;IACD,cAAc;QAEV,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAC7F,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,aAAa,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC;QACnL,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,aAAa,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;QACvI,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAClD,CAAC;;AAEE,kCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACtB,QAAQ,EAAE,kBAAkB;gBAC5B,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAwFT;gBACD,MAAM,EAAE,CAAC;;;IAGT;iBACC;aACJ,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,sCAAc,GAAmE,MAAM,EAC7F,CAAC;AACK,sCAAc,GAA2C;IAChE,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACpC,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;CAC9B,CAAC","file":"ion-form-confirm.js","sourceRoot":"","sourcesContent":["import { Component, Output, EventEmitter, Input } from '@angular/core';\n\n/**\n * Generated class for the IonListCategoryComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components.\n */\n\nexport class IonFormConfirmComponent {\n    data: any;\n     confirmgateway: any;\n     gotoNext: EventEmitter<any> = new EventEmitter<any>();\n    confirmdiscount: number;\n    constructor() {\n        // console.log('Hello IonFormConfirmComponent Component');\n    }\n    discount(data) {\n        if (data && data > 0) {\n            if (this.confirmgateway.order.amount && this.confirmgateway.order.amount >= data) {\n                this.confirmgateway.order.discount = data;\n            } else {\n                this.confirmgateway.order.discount = this.confirmgateway.order.amount;\n            }\n        } else {\n            this.confirmgateway.order.discount = 0;\n        }\n    }\n    stepValidation() {\n\n        if (this.confirmgateway.order.discount && this.confirmgateway.order.discount > 0 && !undefined) {\n            this.confirmgateway.order.totalamount = ((this.confirmgateway.order.deliveryprice || 0) + (this.confirmgateway.order.amount || 0)) - (this.confirmgateway.order.discount || 0);\n        } else {\n            this.confirmgateway.order.totalamount = ((this.confirmgateway.order.deliveryprice || 0) + (this.confirmgateway.order.amount || 0));\n        }\n        this.gotoNext.emit(this.confirmgateway.order);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ion-form-confirm',\n    template: `\n    <ion-content *ngIf=\"confirmgateway.order\">\n    <ion-grid>\n      <ion-row>\n        <ion-col>\n          <ion-list no-lines>\n            <ion-item>\n              <p>มูลค่าสินค้า</p>\n              <p item-end>{{confirmgateway.order.amount | number}} THB</p>\n            </ion-item>\n            <ion-item>\n              <p>ค่าธรรมเนียมการจัดส่งสินค้า</p>\n              <p item-end>{{confirmgateway.order.deliveryprice | number}} THB</p>\n            </ion-item>\n            <ion-row>\n              <ion-col col-8>\n                <ion-item>\n                  <ion-input type=\"text\" [(ngModel)]=\"confirmgateway.order.discount\" (ngModelChange)=\"discount(confirmgateway.order.discount)\" placeholder=\"ใส่โค้ดส่วนลดตรงนี้\"></ion-input>\n                </ion-item>\n              </ion-col>\n              <ion-col col-4>\n                <button ion-button block color=\"warning\" (click)=\"discount(confirmgateway.order.discount)\">ยืนยัน</button>\n              </ion-col>\n            </ion-row>\n            <ion-item>\n              <p><b>ยอดสุทธิ (รวมภาษีมูลค่าเพิ่ม)</b></p>\n              <p item-end><b>{{((confirmgateway.order.deliveryprice || 0) + (confirmgateway.order.amount || 0)) - (confirmgateway.order.discount || 0) | number}} THB</b></p>\n            </ion-item>\n          </ion-list>\n          <ion-item-group>\n            <ion-item-divider color=\"light\"><b>รายการ</b></ion-item-divider>\n          </ion-item-group>\n          <div>\n            <ion-list *ngFor=\"let item of confirmgateway.order.items\">\n              <ion-item>\n                <ion-row>\n                  <ion-col col-12 id=\"shopName-col\">\n                    <p>{{item.product.shop.name}}</p>\n                  </ion-col>\n                </ion-row>\n                <ion-row no-padding>\n                  <ion-col no-padding width-20>\n                  <img src=\"{{item.product.images[0]}}\">\n                  </ion-col>\n                  <ion-col no-padding width-60>\n                    <h3>{{item.product.name}}</h3>\n                    <p>จำนวน: {{item.qty}}</p>\n                  </ion-col>\n                  <ion-col no-padding width-20>\n                    <p>{{item.product.price}} {{item.product.currency}}</p>\n                  </ion-col>\n                </ion-row>\n\n                <ion-row>\n                <ion-col id=\"shippingMethod-col\">\n                  <p>{{'วิธีจัดส่ง'}}</p>\n                </ion-col>\n                </ion-row>\n                \n                <ion-row>\n                  <ion-col>\n                    <p>{{item.delivery.name}}</p>\n                    <p>{{item.delivery.detail}}</p>\n                  </ion-col>\n                </ion-row>\n\n              </ion-item>\n            </ion-list>\n            <ion-row>\n              <p>ที่อยู่จัดส่ง</p>\n              <ion-col col-12>\n                <p>{{confirmgateway.order.shipping.firstname}} {{confirmgateway.order.shipping.lastname}}</p>\n                <p>{{confirmgateway.order.shipping.address}} {{confirmgateway.order.shipping.subdistrict}} {{confirmgateway.order.shipping.district}}\n                  {{confirmgateway.order.shipping.province}} {{confirmgateway.order.shipping.postcode}}\n                </p>\n                <p>โทร : {{confirmgateway.order.shipping.tel}}</p>\n              </ion-col>\n            </ion-row>\n            <ion-row>\n              <ion-col col-12>\n                <button ion-button block color=\"warning\" (click)=\"stepValidation()\">สั่งสินค้า</button>\n              </ion-col>\n            </ion-row>\n          </div>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n  </ion-content>\n    `,\n    styles: [`\n  ion-form-confirm {\n    \n  }`\n    ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'confirmgateway': [{ type: Input },],\n'gotoNext': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}