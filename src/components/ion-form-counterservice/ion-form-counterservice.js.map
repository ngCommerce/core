{"version":3,"sources":["ion-form-counterservice.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAiC,KAAA,EAAM,MAAO,eAAA,CAAgB;AACvE,OAAO,EAAE,6BAAA,EAA8B,MAAO,oDAAA,CAAqD;AAEnG;;;;;GAKG;AAEH,MAAM;IAKJ,YAAmB,MAAqC;QAArC,WAAM,GAAN,MAAM,CAA+B;QACtD,0DAA0D;IAC5D,CAAC;IACD,aAAa,CAAC,IAAI;QAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QAC5D,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC;IAC5D,CAAC;;AAEI,yCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,yBAAyB;gBACnC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;KAqBP;gBACH,MAAM,EAAE,CAAC;;;IAGP;iBACD;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,6CAAc,GAAmE,MAAM;IAC9F,EAAC,IAAI,EAAE,6BAA6B,GAAG;CACtC,CAAC;AACK,6CAAc,GAA2C;IAChE,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACpC,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC3B,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CAChC,CAAC","file":"ion-form-counterservice.js","sourceRoot":"","sourcesContent":["import { Component, Output, EventEmitter, Input } from '@angular/core';\nimport { IonFormPaymentOptionComponent } from './../ion-form-paymentoption/ion-form-paymentoption';\n\n/**\n * Generated class for the IonListCategoryComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components.\n */\n\nexport class IonFormCounterserviceComponent {\n   paymentgateway: any;\n   value: string;\n   datapayment: any;\n\n  constructor(public parent: IonFormPaymentOptionComponent) {\n    // console.log('Hello IonFormPaymentComponent Component');\n  }\n  selectcounter(data) {\n    this.datapayment = this.datapayment ? this.datapayment : {};\n    this.datapayment.order.payment.counterservice = data.name;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ion-form-counterservice',\n  template: `\n    <ion-item-group *ngIf=\"parent.channel == value\">\n    <ion-item-divider color=\"light\"><b>bank</b></ion-item-divider>\n</ion-item-group>\n<ion-grid text-right *ngIf=\"parent.channel == value\">\n    <ion-row>\n        <ion-col>\n            <ion-row>\n                <ion-col text-center *ngFor=\"let counter of paymentgateway\" (click)=\"selectcounter(counter)\">\n                    <ion-segment color=\"light\" [(ngModel)]=\"counteractive\">\n                        <ion-segment-button [value]=\"counter.name\">\n                        <p>preload-image</p>\n                        </ion-segment-button>\n                    </ion-segment>\n                    <p>{{counter.name}}</p>\n                </ion-col>\n            </ion-row>\n        </ion-col>\n    </ion-row>\n</ion-grid>\n<ng-content></ng-content>\n    `,\n  styles: [`\n  ion-form-counterservice {\n    \n  }`\n  ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: IonFormPaymentOptionComponent, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'paymentgateway': [{ type: Input },],\n'value': [{ type: Input },],\n'datapayment': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}