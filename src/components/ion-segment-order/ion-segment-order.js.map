{"version":3,"sources":["ion-segment-order.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,YAAA,EAAc,KAAA,EAAO,MAAA,EAAO,MAAO,eAAA,CAAgB;AACvE,OAAO,EAAE,kBAAA,EAAmB,MAAO,0BAAA,CAA2B;AAE9D;;;;;GAKG;AAEH,MAAM;IAKJ,YAAmB,MAA0B;QAA1B,WAAM,GAAN,MAAM,CAAoB;QAD5C,kBAAa,GAAsB,IAAI,YAAY,EAAO,CAAC;QAE1D,0DAA0D;IAC5D,CAAC;IACD,OAAO,CAAC,CAAC;QACP,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;;AACI,mCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,mBAAmB;gBAC7B,QAAQ,EAAE;;;;;;;;;;;;;KAaP;gBACH,MAAM,EAAE,CAAC;;;IAGP;iBACD;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,uCAAc,GAAmE,MAAM;IAC9F,EAAC,IAAI,EAAE,kBAAkB,GAAG;CAC3B,CAAC;AACK,uCAAc,GAA2C;IAChE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC3B,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;CACnC,CAAC","file":"ion-segment-order.js","sourceRoot":"","sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IonOrdersComponent } from '../ion-orders/ion-orders';\n\n/**\n * Generated class for the IonListCategoryComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components.\n */\n\nexport class IonSegmentOrderComponent {\n  order: any;\n  text: string;\n   items: any;\n   SelectedOrder: EventEmitter<any> = new EventEmitter<any>();\n  constructor(public parent: IonOrdersComponent) {\n    // console.log('Hello IonListProductComponent Component');\n  }\n  getItem(e) {\n    this.order = e;\n  }\n\n  getOrder() {\n    this.SelectedOrder.emit(this.order);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ion-segment-order',\n  template: `\n  <div *ngIf=\"parent.channel == 1\">\n  <ion-list-order [items]=\"items.waiting\" [status]=\"'waiting'\" (itemClicked)=\"getItem($event)\" (click)=\"getOrder()\"></ion-list-order>\n</div>\n<div *ngIf=\"parent.channel == 2\">\n  <ion-list-order [items]=\"items.accept\" [status]=\"'accept'\" (itemClicked)=\"getItem($event)\" (click)=\"getOrder()\"></ion-list-order>\n</div>\n<div *ngIf=\"parent.channel == 3\">\n  <ion-list-order [items]=\"items.sent\" [status]=\"'sent'\" (itemClicked)=\"getItem($event)\" (click)=\"getOrder()\"></ion-list-order>\n</div>\n<div *ngIf=\"parent.channel == 4\">\n  <ion-list-order [items]=\"items.return\" [status]=\"'return'\" (itemClicked)=\"getItem($event)\" (click)=\"getOrder()\"></ion-list-order>\n</div>\n    `,\n  styles: [`\n  ion-segment-order {\n    background-color: red;\n  }`\n  ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: IonOrdersComponent, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'items': [{ type: Input },],\n'SelectedOrder': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}