{"version":3,"sources":["home.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAY,MAAA,EAAO,MAAO,eAAA,CAAgB;AACnD,OAAO,EAAE,IAAA,EAAK,MAAO,eAAA,CAAgB;AACrC,OAAO,uBAAA,CAAwB;AAC/B,OAAO,6BAAA,CAA8B;AACrC,OAAO,EAAE,UAAA,EAAW,MAAO,oBAAA,CAAqB;AAChD,OAAO,EAAE,OAAA,EAAQ,MAAO,yBAAA,CAA0B;AAQlD,MAAM;IAEF,YAAc,MAAc,EAAS,IAAU,EAAS,UAAsB;QAAzC,SAAI,GAAJ,IAAI,CAAM;QAAS,eAAU,GAAV,UAAU,CAAY;QAC1E,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IAC1B,CAAC;IAED,OAAO;QACH,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;QAC1D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;aAC9D,SAAS,EAAE;aACX,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAuB,CAAC;aACtD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,aAAa,CAAC,MAAM;QAChB,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;QAC1D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,aAAa,GAAG,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;aAC5E,SAAS,EAAE;aACX,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAqB,CAAC;aACpD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,aAAa,CAAC,IAAI;QACd,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;QAC1D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,gBAAgB,GAAG,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;aAC7E,SAAS,EAAE;aACX,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAsB,CAAC;aACrD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,UAAU,CAAC,IAAI;QACX,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;QAC1D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,aAAa,GAAG,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;aAC1E,SAAS,EAAE;aACX,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAmB,CAAC;aAClD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,YAAY;QACR,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC;IAClH,CAAC;IAEO,WAAW,CAAC,KAAU;QAC1B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;IAClD,CAAC;;AACE,sBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,0BAAc,GAAmE,MAAM;IAC9F,EAAC,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,OAAO,EAAG,EAAE,EAAG,EAAC;IACnE,EAAC,IAAI,EAAE,IAAI,GAAG;IACd,EAAC,IAAI,EAAE,UAAU,GAAG;CACnB,CAAC","file":"home.service.js","sourceRoot":"","sourcesContent":["import { Injectable, Inject } from \"@angular/core\";\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport { CorService } from \"../../core.service\";\nimport { API_URL } from \"../../models/core.model\";\nimport { HomeCategoryModel, HomeSellerModel } from \"../../models/home.model\";\nimport { ShopListModel } from '../../models/shop.model';\nimport { ProductListModel } from './../../models/product.model';\n\n\n\n\nexport class HomeService {\n    private _apiURL: String;\n    constructor(  apiURL: String, public http: Http, public corService: CorService) {\n        this._apiURL = apiURL;\n    }\n\n    getHome(): Promise<HomeCategoryModel> {\n        let headers = this.corService.createAuthorizationHeader();\n        return this.http.get(this._apiURL + 'homes/', { headers: headers })\n            .toPromise()\n            .then(response => response.json() as HomeCategoryModel)\n            .catch(this.handleError);\n    }\n\n    getHomeSeller(shopId): Promise<HomeSellerModel> {\n        let headers = this.corService.createAuthorizationHeader();\n        return this.http.get(this._apiURL + 'homeseller/' + shopId, { headers: headers })\n            .toPromise()\n            .then(response => response.json() as HomeSellerModel)\n            .catch(this.handleError);\n    }\n\n    seeAllProduct(name): Promise<ProductListModel> {\n        let headers = this.corService.createAuthorizationHeader();\n        return this.http.get(this._apiURL + 'seeallproduct/' + name, { headers: headers })\n            .toPromise()\n            .then(response => response.json() as ProductListModel)\n            .catch(this.handleError);\n    }\n\n    seeAllShop(name): Promise<ShopListModel> {\n        let headers = this.corService.createAuthorizationHeader();\n        return this.http.get(this._apiURL + 'seeallshop/' + name, { headers: headers })\n            .toPromise()\n            .then(response => response.json() as ShopListModel)\n            .catch(this.handleError);\n    }\n\n    getLastVisit() {\n        return window.localStorage.getItem('gLastVisit') ? JSON.parse(window.localStorage.getItem('gLastVisit')) : [];\n    }\n\n    private handleError(error: any): Promise<any> {\n        return Promise.reject(error.message || error);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: String, decorators: [{ type: Inject, args: [API_URL, ] }, ]},\n{type: Http, },\n{type: CorService, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}