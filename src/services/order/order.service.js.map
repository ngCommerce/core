{"version":3,"sources":["order.service.ts"],"names":[],"mappings":"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","file":"order.service.js","sourceRoot":"","sourcesContent":["import { Injectable, Inject } from \"@angular/core\";\nimport { Http } from \"@angular/http\";\nimport \"rxjs/add/operator/toPromise\";\nimport { API_URL } from \"../../models/core.model\";\nimport { CorService } from \"../../core.service\";\nimport { OrderModel, ItemByOrderByShopModel } from \"../../models/Order.model\";\n\n\nexport class OrderService {\n  private _apiURL: String;\n  constructor(\n     apiURL: String,\n    public http: Http,\n    public corService: CorService\n  ) {\n    this._apiURL = apiURL;\n  }\n\n  getOrderList(): Promise<Array<OrderModel>> {\n    let headers = this.corService.createAuthorizationHeader();\n    return this.http\n      .get(this._apiURL + \"orders/\", { headers: headers })\n      .toPromise()\n      .then(response => response.json() as Array<OrderModel>)\n      .catch(this.handleError);\n  }\n\n  createOrder(Order): Promise<OrderModel> {\n    let headers = this.corService.createAuthorizationHeader();\n    return this.http\n      .post(this._apiURL + \"orders/\", Order, { headers: headers })\n      .toPromise()\n      .then(response => response.json() as OrderModel)\n      .catch(this.handleError);\n  }\n\n  getOrderByID(id): Promise<OrderModel> {\n    let headers = this.corService.createAuthorizationHeader();\n    return this.http\n      .get(this._apiURL + \"orders/\" + id, { headers: headers })\n      .toPromise()\n      .then(response => response.json() as OrderModel)\n      .catch(this.handleError);\n  }\n\n  updateOrder(Order): Promise<OrderModel> {\n    let headers = this.corService.createAuthorizationHeader();\n    return this.http\n      .put(this._apiURL + \"orders/\" + Order._id, Order, { headers: headers })\n      .toPromise()\n      .then(response => response.json() as OrderModel)\n      .catch(this.handleError);\n  }\n\n  deleteOrder(id): Promise<OrderModel> {\n    let headers = this.corService.createAuthorizationHeader();\n    return this.http\n      .delete(this._apiURL + \"orders/\" + id, { headers: headers })\n      .toPromise()\n      .then(response => response.json() as OrderModel)\n      .catch(this.handleError);\n  }\n\n  getOrderByShop(): Promise<ItemByOrderByShopModel> {\n    let headers = this.corService.createAuthorizationHeader();\n    return this.http\n      .get(this._apiURL + \"orderbyshop\", { headers: headers })\n      .toPromise()\n      .then(response => response.json() as ItemByOrderByShopModel)\n      .catch(this.handleError);\n  }\n\n  updateItemToAccept(orderId, itemId): Promise<OrderModel> {\n    let headers = this.corService.createAuthorizationHeader();\n    return this.http\n      .put(this._apiURL + \"updateorderaccept/\" + orderId + \"/\" + itemId, null, {\n        headers: headers\n      })\n      .toPromise()\n      .then(response => response.json() as OrderModel)\n      .catch(this.handleError);\n  }\n\n  updateItemToSent(orderId, itemId): Promise<OrderModel> {\n    let headers = this.corService.createAuthorizationHeader();\n    return this.http\n      .put(this._apiURL + \"updateordersent/\" + orderId + \"/\" + itemId, null, {\n        headers: headers\n      })\n      .toPromise()\n      .then(response => response.json() as OrderModel)\n      .catch(this.handleError);\n  }\n\n  updateItemToComplete(orderId, itemId): Promise<OrderModel> {\n    let headers = this.corService.createAuthorizationHeader();\n    return this.http\n      .put(\n        this._apiURL + \"updateordercomplete/\" + orderId + \"/\" + itemId,\n        null,\n        { headers: headers }\n      )\n      .toPromise()\n      .then(response => response.json() as OrderModel)\n      .catch(this.handleError);\n  }\n\n  updateItemToReject(orderId, itemId): Promise<OrderModel> {\n    let headers = this.corService.createAuthorizationHeader();\n    return this.http\n      .put(this._apiURL + \"updateorderreject/\" + orderId + \"/\" + itemId, null, {\n        headers: headers\n      })\n      .toPromise()\n      .then(response => response.json() as OrderModel)\n      .catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any> {\n    return Promise.reject(error.message || error);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: String, decorators: [{ type: Inject, args: [API_URL, ] }, ]},\n{type: Http, },\n{type: CorService, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}